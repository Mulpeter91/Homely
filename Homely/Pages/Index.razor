@page "/"
@page "/home"
@page "/index"
@inject IPropertyRepository _property

<div class="page">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2 g-0">
                <Filter CountyFilter="ApplyCountyFilter"
                    PropertyTypeFilter="ApplyPropertyTypeFilter"/>
            </div>
            <div class="col-lg-10">
                <div class="container-fluid g-0">
                    @foreach (var row in properties.Chunk(4))
                    {
                        <div class="row" style="margin-top: 15px;">
                            @foreach (var property in row)
                            {
                                <div class="col-lg-3">
                                    <PropertyCard Property="property" />
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public IEnumerable<Property> properties;

    protected override void OnInitialized()
    {
        properties = _property.GetProperties();
    }

    public void ApplyCountyFilter(ChangeEventArgs e)
    {
        properties = _property.GetProperties();
        Counties filter;

        if(Enum.TryParse<Counties>(e.Value.ToString(), out filter))
        {
            properties = properties.Where(p => p.Address.County == filter);
        }
    }

    public void ApplyPropertyTypeFilter(ChangeEventArgs e)
    {
        properties = _property.GetProperties();
        PropertyTypes filter;

        if(Enum.TryParse<PropertyTypes>(e.Value.ToString(), out filter))
        {
            properties = properties.Where(p => p.Specifications.PropertyType == filter);
        }
    }
}