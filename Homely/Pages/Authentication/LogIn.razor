@page "/authentication/login"

@inject NavigationManager _navigation
@inject IJSRuntime js

<Button text="Go Back" type="btn-info" onClick="onGoBack"/>
<div class="container-sm" style="max-width: 500px; padding-top: 50px;">
    <h1 style="text-align:center">Log In</h1>
    <br />
    <form>
        <div class="mb-3">
            <TextField title="Email" onFocusOut="onEmailFocusOut" />
        </div>
        <div class="mb-3">
            <PasswordField title="Password" onFocusOut="onPasswordFocusOut" />
        </div>
        <div class="mb-3 form-check">
            <Checkbox text="remember me" onCheck="onRememberMeCheck" />
        </div>
        <div style="text-align: center">
            <Button text="Log in" type="btn-primary" onClick="onLoginClick"/>
            <Button text="Sign up" type="btn-secondary" onClick="onSignUpClick" />
        </div>
    </form>
</div>

@code {
    private string? userEmail;
    private string? userPassword;
    private bool rememberMe; //this would need to come from memory

    protected override void OnInitialized()
    {
        userEmail = string.Empty;
        userPassword = string.Empty;
    }

    private void onLoginClick()
    {
        Console.WriteLine($"logging in with: {userEmail} + {userPassword}");
    } 

    private void onEmailFocusOut(string input)
    {
        userEmail = input;
        Console.WriteLine($"login email: {userEmail}");
    }

    private void onPasswordFocusOut(string input)
    {
        userPassword = input;
        Console.WriteLine($"login password: {userPassword}");
    }

    private void onSignUpClick()
    {
        _navigation.NavigateTo("/authentication/signup");
    }

    private void onRememberMeCheck(bool input)
    {
        rememberMe = input;
        Console.WriteLine($"login remember me: {rememberMe}");
    }

    private void onGoBack()
    {
        js.InvokeVoidAsync("history.back");
    }
}